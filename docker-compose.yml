version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka

#  # Spring Boot application
#  springboot-app:
#    build: .
#    restart: always
#    container_name: springboot-app
#    ports:
#      - "8080:8080"  # Đảm bảo cổng này không bị trùng với dịch vụ khác
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092  # Kafka server địa chỉ trong Docker network
#    depends_on:
#      - kafka  # Đảm bảo Spring Boot khởi động sau khi Kafka đã sẵn sàng
#    networks:
#      - kafka-net
#
#networks:
#  kafka-net:
#    driver: bridge
